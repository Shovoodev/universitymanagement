// schema.prisma

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
    directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
    id       Int        @id @default(autoincrement())
    name     String
    password String?
    email    String     @unique @db.VarChar(100)
    posts    Comments[]
}

model Comments {
    id        Int     @id @default(autoincrement())
    title     String
    published Boolean @default(true)
    authorId  Int
    author    User    @relation(fields: [authorId], references: [id])
}

model Admin {
    id        String   @id @default(cuid())
    name      String?
    email     String
    password  String?
    authority Boolean  @default(true)
    createdAt DateTime @default(now()) @map(name: "created_at")
    updatedAt DateTime @updatedAt @map(name: "updated_at")
    postId    String?
    posts     Post[]
}

model Post {
    id        String  @id @default(cuid())
    title     String
    content   String?
    published Boolean @default(false)
    author    Admin?  @relation(fields: [authorId], references: [id])
    authorId  String?

    @@map(name: "admins")
}

model Student {
    id        String    @id @default(cuid())
    name      String?
    email     String?
    password  String?
    createdAt DateTime  @default(now()) @map(name: "created_at")
    updatedAt DateTime  @updatedAt @map(name: "updated_at")
    subjects  Subject[]
}

model Subject {
    id       String   @id @default(cuid())
    title    String?
    content  String?
    author   Student? @relation(fields: [authorId], references: [id])
    authorId String?

    @@map(name: "students")
}
